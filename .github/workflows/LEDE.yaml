name: LEDE_x64

on:
  workflow_dispatch:
    inputs:
      ssh_debug:
        description: "Enable SSH debugging"
        required: false
        default: "no"
        type: choice
        options: [ "no", "yes" ]

      clean_build:
        description: "Perform clean build"
        required: false
        default: "no"
        type: choice
        options: [ "no", "yes" ]

env:
  BUILD_DIR: lede
  TARGET: x86_64
  REPO_URL: https://github.com/coolsnowwolf/lede
  FEED_CONF: |
    src-git packages https://github.com/openwrt/packages.git
    src-git luci https://github.com/openwrt/luci.git
    src-git lean https://github.com/coolsnowwolf/packages.git

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 360
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup environment
      run: |
        sudo rm -rf /usr/local/lib/android /usr/share/dotnet
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex g++ gawk gcc-multilib \
          gettext git libncurses5-dev libssl-dev python3 python3-distutils rsync unzip \
          zlib1g-dev file wget qemu-utils

    - name: Prepare workspace
      run: |
        mkdir -p ${{ env.BUILD_DIR }}/package/linpc
        chmod -R 755 ${{ env.BUILD_DIR }}

    - name: Clone LEDE source
      run: |
        git clone --depth 1 ${{ env.REPO_URL }} ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}
        git clone https://github.com/coolsnowwolf/packages package/lean

    - name: Run customization
      working-directory: ${{ env.BUILD_DIR }}
      run: |
        chmod +x $GITHUB_WORKSPACE/customize/*.sh
        $GITHUB_WORKSPACE/customize/lede_x86_64.sh

    - name: Setup feeds
      working-directory: ${{ env.BUILD_DIR }}
      run: |
        echo "${{ env.FEED_CONF }}" > feeds.conf
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Build firmware
      working-directory: ${{ env.BUILD_DIR }}
      run: |
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -delete
        make -j$(($(nproc) + 1)) || make -j1 V=s

    - name: Upload artifacts
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: lede-binaries
        path: ${{ env.BUILD_DIR }}/bin/targets/*/*
